{
  "hash": "34d2f1dc99a63d085f1c4bfaae9bc6b0",
  "result": {
    "engine": "knitr",
    "markdown": "# Graphs\n\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-caution}\n## Order of Variables\n\nAcross software platforms pay attention to the order of variables. I generally use `x` for an *independent* variable along the horizontal axis and `y` for a *dependent* variable along the vertical axis. Different software asks for the variables to be listed in different order so it is worth paying close attention to the syntax.\n:::\n\n## Scatterplots\n\nA scatterplot is one of the most basic of all data visualizations. At the same time, a scatterplot can be tremendously informative because it provides: the location of every data point (data points may be overprinted); a sense of the distribution of both the *x* and *y* variables; and a sense of the overall trend in the relationship between the two variables, if there is one.\n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\n#### Get The Data\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated_multilevel_data.dta\n\n```\n:::\n\n\n#### Scatterplot\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ntwoway scatter outcome warmth, ///\n  xtitle(\"warmth\") ytitle(\"outcome\") ///\n  title(\"Outcome by Parental Warmth\") \n\nquietly graph export scatter.png, replace\n\n```\n:::\n\n\n![Outcome by Parental Warmth (Stata)](scatter.png){#fig-Stata}\n\n### R\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\n\ndf <- read_dta(\"simulated_multilevel_data.dta\")\n```\n:::\n\n\n#### Scatterplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(df,\n       aes(x = warmth,\n           y = outcome)) +\n  geom_point() +\n  labs(title = \"Outcome by Parental Warmth\")\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (R)](graphs_files/figure-html/fig-R-1.png){#fig-R width=672}\n:::\n:::\n\n\n### Julia\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndf = DataFrame(load(\"simulated_multilevel_data.dta\"))\n```\n:::\n\n\n#### Scatterplot\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing StatsPlots\n\n@df df scatter(:warmth, :outcome, \n               title = \"Outcome by Parental Warmth\",\n               ylabel = \"outcome\",\n               xlabel = \"parental warmth\")\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (Julia)](graphs_files/figure-html/fig-Julia-J1.png){#fig-Julia width=300}\n:::\n:::\n\n\n:::\n\n## Line Graph (Linear Trend)\n\nA line graph of the data focuses in on the linear trend in the data.\n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\n#### Get The Data \n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated_multilevel_data.dta\n\n```\n:::\n\n\n#### Line Graph\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ntwoway lfit outcome warmth, ///\n  xtitle(\"warmth\") ytitle(\"outcome\") ///\n  title(\"Outcome by Parental Warmth\") \n\nquietly graph export lfit.png, replace\n\n```\n:::\n\n\n![Outcome by Parental Warmth (Stata)](lfit.png){#fig-Statalfit}\n\n### R\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\n\ndf <- read_dta(\"simulated_multilevel_data.dta\")\n```\n:::\n\n\n#### Line Graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(df,\n       aes(y = outcome,\n           x = warmth)) +\n  geom_smooth(method = \"lm\") +\nlabs(title = \"Outcome by Parental Warmth\")\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (R)](graphs_files/figure-html/fig-Rlfit-1.png){#fig-Rlfit width=672}\n:::\n:::\n\n\n### Julia\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndfL = DataFrame(load(\"simulated_multilevel_data.dta\"))\n```\n:::\n\n\n#### Line Graph\n\nTo make our plot with a smoother in Julia, we set the `markercolor` and `markerstrokecolor` to be *white*, and the `smooth` option to `:true`.\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing StatsPlots\n\n@df dfL scatter(:warmth, :outcome, \n               title = \"Outcome by Parental Warmth\",\n               ylabel = \"outcome\",\n               xlabel = \"warmth\",\n               markercolor = \"white\",\n               markerstrokecolor = \"white\",\n               smooth=:true)\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (Julia)](graphs_files/figure-html/fig-Julialfit-J1.png){#fig-Julialfit width=300}\n:::\n:::\n\n\n:::\n\n## Spaghetti Plots\n\nA *spaghetti plot* might be considered the most *multilevel* of the visualizations here considered. A spaghetti plot shows the group specific slopes and intercepts for all of the groups in the data. \n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\nIn Stata, spaghetti plots are most easily generated using the user written `spagplot` command. Type `findit spagplot` to install this command.\n\n#### Get The Data\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated_multilevel_data.dta\n\n```\n:::\n\n\n#### Spaghetti Plot\n\n::: {.callout-tip}\n##### Installing `spagplot`\n\n`spagplot` is a user written command. Type `findit spagplot` to install.\n:::\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nspagplot outcome warmth, ///\n  id(country) ///\n  xtitle(\"parental warmth\") ytitle(\"outcome\") ///\n  title(\"Outcome by Parental Warmth\") \n\nquietly graph export spagplot.png, replace\n\n```\n:::\n\n\n![Outcome by Parental Warmth (Stata)](spagplot.png){#fig-Stataspagplot}\n\n### R\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\n\ndf <- read_dta(\"simulated_multilevel_data.dta\")\n```\n:::\n\n\n#### Spaghetti Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ndf$country <- factor(df$country)\n\nggplot(df,\n       aes(y = outcome,\n           x = warmth)) +\n  geom_smooth(aes(color = country,\n                  group = country), \n              method = \"lm\",\n              se = FALSE) +\n    geom_smooth(method = \"lm\", linewidth = 3) +\nlabs(title = \"Outcome by Parental Warmth\")\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (R)](graphs_files/figure-html/fig-Rspagplot-1.png){#fig-Rspagplot width=672}\n:::\n:::\n\n\n### Julia\n\n#### Get The Data\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndfL = DataFrame(load(\"simulated_multilevel_data.dta\"))\n```\n:::\n\n\n#### Spaghetti Plot\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing StatsPlots\n\n@df dfL scatter(:warmth, :outcome, \n               title = \"Outcome by Parental Warmth\",\n               ylabel = \"outcome\",\n               xlabel = \"warmth\",\n               markercolor = \"white\",\n               markerstrokecolor = \"white\",\n               group = :country,\n               legend = false,\n               smooth=:true)\n```\n\n::: {.cell-output-display}\n![Outcome by Parental Warmth (Julia)](graphs_files/figure-html/fig-Juliaspagplot-J1.png){#fig-Juliaspagplot width=300}\n:::\n:::\n\n\n:::\n\n\n",
    "supporting": [
      "graphs_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}