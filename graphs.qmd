# Graphs

```{r}
#| label: graphsetup
#| echo: false
#| output: false

library(Statamarkdown)

library(lme4) 

library(JuliaCall)

julia_setup(JULIA_HOME = "/Applications/Julia-1.8.app/Contents/Resources/julia/bin")

```

## Scatterplots

::: {.panel-tabset group="language"}

### Stata

#### Get The Data

```{stata, collectcode=TRUE}

use simulated_multilevel_data.dta

```

#### Scatterplot

```{stata}
#| fig-height: 3

twoway scatter outcome warmth, ///
  xtitle("warmth") ytitle("outcome") ///
  title("Outcome by Parental Warmth") 

quietly graph export scatter.png, replace

```

![Outcome by Parental Warmth (Stata)](scatter.png){#fig-Stata}

### R

#### Get The Data

```{r}

library(haven)

df <- read_dta("simulated_multilevel_data.dta")

```

#### Scatterplot

```{r}
#| fig-height: 3
#| label: fig-R
#| fig-cap: "Outcome by Parental Warmth (R)"

library(ggplot2)

ggplot(df,
       aes(x = warmth,
           y = outcome)) +
  geom_point() +
  labs(title = "Outcome by Parental Warmth")

```

### Julia

#### Get The Data

```{julia}
#| output: false

using Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

df = DataFrame(load("simulated_multilevel_data.dta"))

```

#### Scatterplot

```{julia}
#| fig-height: 3
#| label: fig-Julia
#| fig-cap: "Outcome by Parental Warmth (Julia)"

using StatsPlots

@df df scatter(:warmth, :outcome, 
               title = "Outcome by Parental Warmth",
               ylabel = "outcome",
               xlabel = "parental warmth")

```

:::

## Line Graph

::: {.panel-tabset group="language"}

### Stata

#### Get The Data 

```{stata, collectcode=TRUE}

use simulated_multilevel_longitudinal_data.dta

```

#### Line Graph

```{stata}
#| fig-height: 3

twoway lfit outcome t, ///
  xtitle("time") ytitle("outcome") ///
  title("Outcome by Time") 

quietly graph export lfitlongitudinal.png, replace

```

![Outcome by Parental Warmth (Stata)](lfitlongitudinal.png){#fig-Statalongitudinal}

### R

#### Get The Data 

```{stata, collectcode=TRUE}

use simulated_multilevel_longitudinal_data.dta

```

#### Line Graph

```{stata}
#| fig-height: 3

twoway lfit outcome t, ///
  xtitle("time") ytitle("outcome") ///
  title("Outcome by Time") 

quietly graph export lfitlongitudinal.png, replace

```

![Outcome by Parental Warmth (Stata)](lfitlongitudinal.png){#fig-Statalongitudinal}

### Julia

#### Get The Data

```{julia}
#| output: false

using Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

dfL = DataFrame(load("simulated_multilevel_longitudinal_data.dta"))

```

#### Line Graph

To make our plot with a smoother in Julia, we set the `markercolor` and `markerstrokecolor` to be *white*, and the `smooth` option to `:true`.

```{julia}
#| fig-height: 3
#| label: fig-Julialongitudinal
#| fig-cap: "Outcome by Parental Warmth (Julia)"

using StatsPlots

@df dfL scatter(:t, :outcome, 
               title = "Outcome by Time",
               ylabel = "outcome",
               xlabel = "time",
               markercolor = "white",
               markerstrokecolor = "white",
               smooth=:true)

```

:::

## Spaghetti Plots

::: {.panel-tabset group="language"}

### Stata

### R

### Julia

:::


